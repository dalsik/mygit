###백준을 통해 알게된 내용들###

1.
int의 자료형 크기는 10¹²의 크기를 넘지 않기 때문에 그 이상의 숫자는 long long 자료형으로 %lld로 입력을 받는다.


2.
C언어에서 문자열은 char의 배열형으로 입력을 받는댜 (파이썬 이슈때문에 까먹음)


3.
문자열의 배열은 마지막에 NULL문자가 들어가기 때문에 크기를 하나 더 늘려서 생성해야 한다.


4.
\을 출력하려면 \\으로 해야되고 출력되는 위치는 처음\자리에 위치하게 된다.'도 마찬가지로\'     '


5.
scanf는 EOF를 어디 저장해주는 것이 아니라 자기 자신이 EOF를 반환


6. 
visual Code 를 사용할 때 다른 파일이 디버깅이 되면 참고
https://skyjwoo.tistory.com/entry/visual-studio-LNK1168-%EC%93%B0%EA%B8%B0%EC%9A%A9%EC%9C%BC%EB%A1%9C-%EC%97%B4-%EC%88%98-%EC%97%86%EC%8A%B5%EB%8B%88%EB%8B%A4-%EC%98%A4%EB%A5%98


7.
scanf문에서 a에 제대로 된 값을 받았다면 1을, 못 받았다면 0을, 읽기 오류가 발생하면 -1(EOF)이 리턴
-> 잘못된 예시)
arr[i] = scanf("%d", &a);

-> 올바르게 고친 결과)
scanf("%d", &a);
arr[i] = a;


8.
문자열 배열을 선언할 때 여러 이중배열이라면 초기화를 ={"\0" or ""}; 이런 형식으로 초기화를 진행해야 한다.


9. 공백 없이 정수를 입력받고 하나씩 입력받을 때 %1d로 지정해주므로서 쉽게 구할 수 있다.
또는 <stdlib.h>에 있는 atoi함수를 통해 스트링 문자를 정수문자로 변환할 수 있다.


10. scanf의 허점
scanf는 키보드로부터 직접 입력받는 것이 아니고 버퍼라는 메모리 공간으로 저장되고 그 버퍼에 저장된 값을 변수에 다시 저장한다.
char형 변수를 %c로 입력받게 되는 경우 개행문자'\n' 도 같이 입력이 된다.
이를 해결하려면 버퍼를 비워주는 rewind(stdin)을 사용하여 개행문자 \n을 제거해주면 된다.(getchar())로도 해결이 가능하거나 %c%c 로 2번 입력받아도 가능


11. 공백 포함하여 입력 받는 법
scanf 함수에서 서식 지정자를 "%[^\n]s"와 같이 지정하면 공백까지 포함하여 문자열을 입력받을 수 있다.


12. 아스키 코드
소문자 'a'의 아스키 코드는 97이다.
대문자 'A'의 아스키 코드는 65이다.


13. 한 문자만 출력
한 문자만 출력해야 할 때 &s를 사용하게 되면 해당 문자열이 \n을 만나게 될 때까지 출력하게 되어 오류가 발생할 수 있으므로 %c를 사용하여 출력하는 것이 올바르다.


14. 배열 입력받기
배열을 입력받을 때 &배열명[index]를 사용하여 입력받을 수 있다. (또는 배열명+index)

※ Number = &Number[0]


15. gets와 puts
gets는 표준입력으로 들어온 문자열을 개행한 부분 앞까지 짤라서 char* 타입의 문자열로 저장해주고, 자동으로 문자열 맨 끝에 '\0'을 넣어서 문자열을 완성

puts는 매개변수로 들어온 char* 타입의 문자열의 주소값으로 가서 문자열의 끝 '\0'이 나올때까지의 문자들을 표준출력(output)에 쭉 출력해주다가 다 출력한 후에는 친절하게 개행('\n') 까지 넣어주는 함수

※ fgets 함수는 파일에서 한 줄씩 문자열을 읽는 함수(마지막에 줄바꿈 문자가 포함됨)
fgets 함수는 " "는 입력으로 받지 않는다.
(출처: https://blockdmask.tistory.com/343)


16. 개행문자(띄어쓰기, "/", ",")등 모두 입력받을 때
scanf("%[^\n]s or c") 사용하기  
ex) " a"를 입력하면 문자열 길이는 2, " a "를 입력하면 문자열 길이는 3이 된다.


17.