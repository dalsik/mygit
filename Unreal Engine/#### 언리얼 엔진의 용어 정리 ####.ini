#### 언리얼 엔진의 용어 정리 ####


# 프로젝트(Project)

"프로젝트"에는 Blueprints, Materials 등 많은 폴더가 포함됨

모든 프로젝트에는 연관된 .uproject파일이 존재, 프로젝트를 생성/열람/저장 가능



# 블루프린트(Blueprint)

노드 기반의 인터페이스 사용, 게임플레이 스크립팅 시스템

일반적인 스크립팅 언어와 마찬가지로 블루프린트 엔진에서 오브젝트 지향 클래스 또는 오브젝트를 정의하기 위해 사용 됨



# 오브젝트(Object)

언리얼 엔진에서 가장 기본적인 클래스

"오브젝트"는 구성돤위 역할을 하며, 에셋에 필수적인 기능을 많이 포함됨

언리얼 엔진에서는 거의 모든 것이 오브젝트로부터 상속받거나 함수 기능을 사용

※ C++에서 UObject는 모든 오브젝트의 베이스 클래스



# 클래스(Class)

"클래스"는 언리얼 엔진에서 특정 액터나 오브젝트의 행동과 프로퍼티를 정의, 클래스는 계층적

정보를 부모 클래스로부터 상속받고 자손 클래스에게 다시 상속

클래스는 C++코드나 블루프린트로 생성



# 액터(Actor)

"액터"는 카메라, 스태틱 메시, 플레이어 스타트 위치 등과 같이 레벨에 배치할 수 있는 모든 오브젝트를 가리킴

"액터"는 이동, 회전, 스케일링 등의 3D 트랜스폼을 지원

※ C++에서 AActor는 모든 액터의 베이스 클래스



# 형변환(Casting)

특정 클래스의 액터를 다른 클래스인 것처럼 간주하려 시도하는 작업 (성공, 실패할 수 있음)

예시로 화염 들 수 있음
-> 레벨에서 플레이어가 어느 볼륨에 오버랩이 되면 해당 볼륨을 화염으로 "형변환"하여 플레이어 체력 데미지 기능에 액세스 시도 가능



# 컴포넌트(Component)

"컴포넌트"는 액터에 추가할 수 있는 기능 조각

액터에 컴포넌트를 추가 -> 액터는 해당 컴포넌트의 기능을 사용

ex) 스포트 라이트 컴포넌트는 액터가 빛을 내게 함

"컴포넌트"는 액터에 추가되어야 하며, 단독으로는 존재 불가



# 폰(Pawn)

"폰"은 액터의 서브클래스이며, 인게임 아바타의 역할

플레이어 , NPC => 폰

폰을 제어하면 Possessed(빙의)상태로 간주

제어하지 않은 폰은 Unpossessed(빙의 해제)된 것으로 간주



# 캐릭터(Character)

"캐릭터"는 플레이어 캐릭터로 사용하기 위한 폰 액터의 서브클래스

캐릭터 클래스에는 콜리전 설정, 움직임을 위한 추가 코드 등이 포함


# 플레이어 컨트롤러(Player Controller)

"플레이어 컨트롤러"는 플레이어의 입력을 게임 안의 상호작용으로 변환

모든 게임에는 최소 하나의 "플레이어 컨트롤러"가 존재

또한, 멀티플레이어 게임의 주요한 네트워크 상호작용 지점

각 클라이언트는 자신의 플레이어에 해당하는 컨트롤러만 가지고 서버와 통신하는 용도로 사용 가능


※ C++ 클래스는 APlayerController



# AI 컨트롤러(AI Controller)

"AI 컨트롤러"도 게임 안에 NPC를 나타내는 폰을 소유

별 다른 명령이 없다면 기본적으로 베이스 AI 컨트롤러에 빙의

※ C++ 클래스는 AAIController



# 플레이어 스테이트(Player State)

"플레이어 스테이트" 게임 참여자의 스테이트를 말함

인간 플레이어 또는 플레이어를 시뮬레이션하는 봇 등이 존재

플레이어 스테이트의 정보들 예시
- 이름
- 현재 레벨
- 체력
- 점수
- 여부

멀티플레이어 게임의 경우 모든 컴퓨터에 모든 플레이어의 스테이트가 존재

동기화를 유지하기 위해 서버에서 클라이언트로 데이터를 리플리케이트 가능

※ C++ 클래스는 APlayerState



# 게임 모드(Game Mode)

"게임 모드"는 플레이 중의 게임의 규칙을 설정

어떤 방법으로 구현하던, 한 레벨에는 하나의 게임 모드만 존재

멀티 게임의 경우 게임 모드는 서버에만 존재, 연결된 각 클라이언트에 규칙이 복제됨

※ C++ 클래스는 AGameMode



# 게임 스테이트(Game State)

"게임 스테이트"

예시
- 게임 점수에 대한 정보
- 대결이 시작됐는지의 여부

멀티게임의 경우 게임 스테이트에 대한 로컬 인스턴스가 각 플레이어의 컴퓨터에 하나씩 존재

로컬 게임 스테이트 인스턴스는 서버로부터 업데이트된 정보를 로드함

※ C++ 클래슨는 AGameState



# 브러시(Brush)

"브러시"는 큐브, 구체와 같은 3D 셰이프를 묘사하는 액터

레벨에 브러시를 배치하여 레벨 지오메트리 정의 가능 -> 바이너리 스페이스 파티션 또는 BSP 브러시라고 함

레벨의 윤곽 작업을 빠르게 하고 싶은 경우 등에 유용



# 볼륨(Volume)

볼륨은 연결된 효과에 따라 용도가 달라지는 바운드된 3D 공간

예시)
- 블로킹 볼륨 => 보이지 않으며 액터가 통과 못함
- 페인 코징 볼륨 => 오버랩되는 액터에 시간이 지남에 따라 데미지



# 레벨(Level)

레벨은 우리가 정의하는 게임플레이 영역

레벨에는 지오메트리, 폰, 액터 등과 같이 플레이어가 보고 상호작용할 수 있는 모든 것이 포함

언리얼 엔진은 각 레벨을 별도의 .umap 파일로 저장

때로는 레벨이 맵 이라고 불리기도 함



# 월드(World)

월드는 게임을 구성하는 모든 레벨이 담겨 있는 컨테이너

레벨의 스트리밍과 다이내믹 액터의 스폰(생성)을 처리


출처 : "https://docs.unrealengine.com/5.3/ko/unreal-engine-terminology/"
