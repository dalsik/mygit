# Git의 기초 정보들

1. 커밋(commit) -> 파일을 추가하거나 변경 내용을 저장소에 저장하는 작업
2. 푸시(push) -> 파일을 추가하거나 변경 내용을 원격 저장소에 업로드하는 작업

로컬 저장소 = 자신의 컴퓨터의 저장소
원격 저장소 = 네트워크에 존재하는 저장소

3. 브런치(branch) -> 병렬로 수행되는 여러 버전 관리를 위해 존재하는 기능

작은 작업 단위로 커밋 후, 작업이 일단락 됐을 떄는 푸시를 하는 것이 일반적

git init = 저장소 작성
git clone = 저장소 복제
git add = 파일의 생성\변경\삭제를 git 인덱스에 추가
git commit = 변경 결과를 로컬 저장소에 커밋
git push = 로컬 저장소를 푸시로 원격 저장소에 반영

git 설정 초반 과정
mkdir filename
cd filename
git init
< 디렉토리를 생성하고 터미널로 경로를 이동 후 저장소를 새로 생성하는 과정 >

생성한 파일을 로컬 저장소에 추가 후 git add 진행

그 후 인덱스에 추가된 파일을 commit진행
(커밋은 추가나 변경을 저장소에 기록하는 작업)
-> git commit -m "new file"

git status -> 상태정보 확인

원격 저장소에 반영하기 전에 원격 저장소의 정보를 추가.
git remote add origin https://github.com/dalsik/mygit.git(나의 git 저장소 정보)

git push origin master
원격 저장소에 반영하기 위함




#브랜치(Branch)의 사용
git branch = 현재 브런치 목록 

git branch subdir01 = subdir01 이라는 브랜치 생성

git checkout subdir01 = 지점의 이동 명령어

git checkout -b subdir01 = 지점 만들기 및 이동 다음 명령으로 정리 가능




#브런치에서의 개발 작업

지점에서 개발 작업을 진행하여도 아무런 변화가 없다.

ex) 
git add hello2.html
git commit -m "add file hello2"

로컬 저장소에 파일추가가 기록이 됨
원격 저장소의 정보는 등록제이기 때문에 브런치 이름을 지정하는 것만으로도 푸시 가능
git push origin subdir01




# 브랜치에서 풀

다른 개발자가 subdir01 저장소로 개발하려면 풀 명령을 사용하여 쉽게 구현 가능

우선 checkout명령으로 이동한다.
git checkout subdir01

git pull

원격 브랜치 subdir01 의 코드를 가져옵니다.




# 브랜치 병합

실제 개발현장에서는 새로운 기능의 브랜치를 만들고 개발하고 테스트가 완료되면
master 브랜치에 통합이라는 흐름으로 개발 작업을 수행한다.
이 작업을 병합이라 한다.

1. 현재 분기를 master로 전환
git checkout master

그리고 sub1 브랜치 결과를 병합
git merge subdir01

실행 결과를 보면 subdir01 지점에서 만든 파일이 추가된 것을 알 수 있다.

git push origin master

브랜치 subdir01의 내용이 master로 병합완료.




# 사용하지 않는 브랜치 제거
git branch -d subdir01 

결과 살펴보기
git branch




# Git 명령어 살펴보기

git status
-> 저장소의 상태 확인

git add 
-> 파일이나 디렉토리를 인덱스에 추가하는 명령어

git commit
-> 인덱스에 추가 된 파일이나 폴더의 내용을 저장소에 쓸 떄 사용
편집기는 각각 다르기 때문에 -m 옵션을 붙인 후 메세지 지정
-a 옵션을 지정하면 변경된 파일을 검색하고 인덱스에 추가하는 작업도 동시에 실시

git branch
-> 브랜치에 다양한 작업을 수행하기 위해 사용하는 명령어

git checkout 
-> 로컬 저장소의 브랜치를 전환할 때 사용하는 명령어

git log
-> 로컬 장소의 커밋 히스토리를 탐색하는 명령어
-n 옵션 내역보기 수를 지정할 수 있다.

git grep
-> 저장소의 파일 내용에서 검색하고자 할 때 사옹하는 명령어

git clone
-> 기존 원격 저장소를 로컬에 다운로드 하기 위해 사용하는 명령어

git remote 
-> 원격 저장소를 조작하는데 사용하는 명령
git remote : 원격 저장소의 이름 목록 표시
git remote -v : 원격 저장소에 대한 자세한 목록보기
git remote add [name][url] : 원격 저장소를 추가
git remote rm[name] : 원격 저장소를 제거

git reset
-> 로컬 저장소의 커밋을 취소하기 위해 사용되는 명령

git merge
-> 현재 브런치에 다른 지점에서 변경 사항을 병합하는 데 사용하는 명령

ex ) 분기 bug-fix를 master 브런치에 병합합니다.
-> git checkout master git merge bug-fix

git pull
-> 원격 브랜치의 변경 사항을 캡처하기 위해 사용하는 명령어



